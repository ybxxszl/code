buildscript {
    repositories {
        mavenLocal()
        maven {
            url "http://maven.aliyun.com/nexus/content/groups/public/"
        }
        maven {
            url "https://plugins.gradle.org/m2/"
        }
        mavenCentral()
    }
    ext {
        springBootVersion = "2.1.2.RELEASE"
    }
    dependencies {
        classpath "org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}"
    }
}

apply plugin: "eclipse"
apply plugin: "idea"
apply plugin: "java"
apply plugin: "org.springframework.boot"
apply plugin: "io.spring.dependency-management"

sourceCompatibility = 1.8
targetCompatibility = 1.8

group "com.vilsale"

repositories {
    mavenLocal()
    maven {
        url "http://maven.aliyun.com/nexus/content/groups/public/"
    }
    mavenCentral()
}

ext {
    spring = [
            springBootStarterVersion: "2.1.2.RELEASE",
            springFoxSwaggerVersion : "2.9.2"
    ]
    baomidou = [
            mybatisPlusVersion: "3.0.7.1"
    ]
    projectlombok = [
            lombokVersion: "1.18.4"
    ]
}

dependencies {
    compile fileTree(dir: "libs", include: "*.jar")

    compileOnly "org.projectlombok:lombok:$projectlombok.lombokVersion"
    annotationProcessor "org.projectlombok:lombok:$projectlombok.lombokVersion"

    compile "io.springfox:springfox-swagger2:$spring.springFoxSwaggerVersion"
    compile "io.springfox:springfox-swagger-ui:$spring.springFoxSwaggerVersion"

    implementation "net.sf.json-lib:json-lib:2.4:jdk15"

    implementation "joda-time:joda-time:2.10"

    implementation "com.auth0:java-jwt:3.3.0"

    implementation "org.apache.httpcomponents:httpclient:4.5.2"

    implementation "redis.clients:jedis:2.9.0"

    implementation "mysql:mysql-connector-java:5.1.47"
    implementation "com.alibaba:druid-spring-boot-starter:1.1.10"
    implementation "com.baomidou:mybatis-plus-boot-starter:$baomidou.mybatisPlusVersion"
    implementation "com.baomidou:mybatis-plus-generator:$baomidou.mybatisPlusVersion"

    implementation "org.springframework.boot:spring-boot-starter-data-redis:$spring.springBootStarterVersion"
    implementation "org.springframework.boot:spring-boot-starter-aop:$spring.springBootStarterVersion"
    implementation "org.springframework.boot:spring-boot-starter-web:$spring.springBootStarterVersion"
    implementation "org.springframework.boot:spring-boot-starter-log4j2:$spring.springBootStarterVersion"
    implementation "org.springframework.boot:spring-boot-starter-mail:$spring.springBootStarterVersion"
    implementation "org.springframework.boot:spring-boot-starter-freemarker:$spring.springBootStarterVersion"
    implementation "org.springframework.boot:spring-boot-starter-quartz:$spring.springBootStarterVersion"

    testImplementation "org.springframework.boot:spring-boot-starter-test:$spring.springBootStarterVersion"
    testImplementation "junit:junit:4.12"
}

configurations {
    compile.exclude module: "spring-boot-starter-logging"
}

ext {
    if (!project.hasProperty("env")) {
        env = "dev"
    }
}

print "~ ~ ~ ~ ~ ~ ~ ~ ~ ~ " + env + " ~ ~ ~ ~ ~ ~ ~ ~ ~ ~"

// 开发环境：运行 bootRun 打包 bootJar
// 测试环境：运行 bootRun -Penv=test 打包 bootJar -Penv=test
// 正式环境：运行 bootRun -Penv=prod 打包 bootJar -Penv=prod
bootJar {
    baseName = "visauthcontract"
}

// 使用配置
processResources {
    include "fadada-config.properties"
    include "application.properties"
    include "log4j2-spring.xml"
}

// 应用配置
task("useConfig", type: Copy) {
    description "应用配置"
    from("src/main/resources/config/") {
        include "fadada-config-" + env + ".properties"
        rename "fadada-config-" + env + ".properties", "fadada-config.properties"

        include "application-" + env + ".properties"
        rename "application-" + env + ".properties", "application.properties"

        include "log4j2-spring-" + env + ".xml"
        rename "log4j2-spring-" + env + ".xml", "log4j2-spring.xml"
    }
    into "src/main/resources/"
}

// 清除配置
task("clearConfig", type: Delete) {
    description "清除配置"
    delete "src/main/resources/fadada-config.properties", "src/main/resources/application.properties", "src/main/resources/log4j2-spring.xml"
}

// 任务执行：useConfig -> compileJava -> processResources -> classes -> clearConfig -> bootRun/bootJar
compileJava.dependsOn("useConfig")
bootRun.dependsOn("clearConfig")
bootJar.dependsOn("clearConfig")
